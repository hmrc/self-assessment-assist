# Copyright 2024 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = self-assessment-assist
mtd-date = "2016-04-06"



# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.selfassessmentassist.routing.VersionRoutingRequestHandler"


# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

play.filters.enabled += "play.filters.cors.CORSFilter"
play.filters.cors {
  allowedOrigins = ["http://localhost:9680"]
}

# Play Modules
play.modules.enabled += "uk.gov.hmrc.selfassessmentassist.config.Module"

# Taken from vat-api
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"
#play.modules.enabled += "config.DIModule"


# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes


feature-switch {

  #Specifies which versions of the API to allow through the VersionRoutingRequestHandler
  version-1 {
    enabled = true
  }
}

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
  # 300 is the default, you may need to change this according to your needs
  confidenceLevel = 300
}

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  enabled = true
}


access-keys {
  xApiKey: "dummy-api-key"
}

auditing {
  enabled = false
}
# Api related config
api {
  1.0 {
    # The status of the API for the API Platform.
    status = "BETA"
    endpoints.enabled = true
  }

  confidence-level-check {
    confidence-level = 250
    definition.enabled = true
    auth-validation.enabled = true
  }

  # The context which the API will have via the API Platform http://API_GATEWAY/{api.gateway.context}/
  gateway.context = "individuals/self-assessment/assist"
}

http-verbs {
  proxy {
      enabled = false
  }
}

microservice {

  services {
    auth {
      host = localhost
      port = 8500
      enabled = true
    }

    mtd-id-lookup {
      host = localhost
      port = 9769
    }

    non-repudiation {
      host = localhost
      port = 8343
      numberOfRetries = 10
      initialDelay = 500 milliseconds
      submit-url = "/submission"
      x-api-key = "dummy-api-key"
    }

    rds {
      host = localhost
      port = 8343
      submit-url = "/rds/assessments/self-assessment-assist"
      acknowledge-url = "/rds/assessments/self-assessment-assist/acknowledge"
      rdsAuthRequiredForThisEnv = false
      sas{
        host = sas-server
        port = 443
        auth-url = "/SASLogon/oauth/token"
        clientId = stub-client-id
        clientSecret = stub-secret-id
        clientCode = stub-code
      }
    }

    cip-fraud-service {
      host = localhost
      port = 8343
      submit-url = "/fraud"
    }

   ifs {
     host = localhost
     port = 8343
     env = local
     submit-url = "/interaction-data/store-interactions"
     token = ABCD1234
     environmentHeaders = ["Accept", "Content-Type", "Location", "X-Request-Timestamp", "X-Session-Id", "X-Request-Id"]
   }
  }
}


feature-switch {

  #Specifies which versions of the API to allow through the VersionRoutingRequestHandler
  version-1 {
    enabled = true
  }

  auth {
    enabled = true
  }
}
